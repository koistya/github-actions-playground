name: CI/CD

on:
  push:
    branches: [main]
    tags:
      - "v*"
  pull_request:
    branches: [main]
  schedule:
    - cron: "0 7 * * *"
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to deploy to"
        type: environment
        default: "test"

env:
  NODE_VERSION: 20

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        id: setup-node
        with: { node-version: "${{ env.NODE_VERSION }}", cache: "yarn" }
      - run: yarn install
        if: steps.setup-node.outputs.cache-hit != 'true'

  build-app:
    name: Build App
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with: { node-version: "${{ env.NODE_VERSION }}", cache: "yarn" }
      - run: yarn install
      - run: yarn workspace app build

  build-api:
    name: Build API
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with: { node-version: "${{ env.NODE_VERSION }}", cache: "yarn" }
      - run: yarn install
      - run: yarn workspace api build

  build-edge:
    name: Build Edge
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with: { node-version: "${{ env.NODE_VERSION }}", cache: "yarn" }
      - run: yarn install
      - run: yarn workspace api build

  publish:
    name: Publish
    runs-on: ubuntu-latest
    needs: [build-app, build-api, build-edge]
    steps:
      - run: 'echo "${{ github.event_name }}"'
      - run: 'echo "${{ github.event.inputs.environment }}"'

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: publish
    environment:
      name: ${{ github.event.inputs.environment }}
      url: https://test.example.com
    steps:
      - run: "echo ${{ github.event_name }}"
